HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
_IN_DUMB_TERM=false  # Not in Windows terminal

setopt autocd               \
       extendedglob         \
       nomatch              \
       interactive_comments \
       noflowcontrol        \
       auto_pushd           \
       complete_in_word     \
       hist_ignore_dups     \
       hist_ignore_space    \
       incappendhistory     \
       share_history

unsetopt beep

# keybinds
bindkey -e
bindkey "^U" backward-kill-line
function _zle_ls() {
  zle push-line
  BUFFER=" ls"
  zle accept-line
}
zle -N _zle_ls
bindkey '^[l' _zle_ls

# tab completion
eval "$(dircolors)"
autoload -U compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} "ma=30;1;42;21"
zstyle ':completion:*' matcher-list \
  '' \
  'm:{a-zA-Z}={A-Za-z}' \
  'm:{A-Z}={a-z} r:|[._-/]=* r:|=* l:|=*' \
  'm:{a-z}={A-Z} r:|[._-/]=* r:|=* l:|=*' \
  'r:|[._-/]=* r:|=* l:|=*'
zmodload zsh/complist
compinit
bindkey '^[[Z' reverse-menu-complete

# arrow search
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^[[A" history-beginning-search-backward-end
bindkey "^[[B" history-beginning-search-forward-end

# alt n, alt p doing the same thing as arrows
bindkey "^[p" history-beginning-search-backward-end
bindkey "^[n" history-beginning-search-forward-end
# home and end, bruh
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line

# delete word
autoload -U select-word-style
select-word-style bash
export WORDCHARS='.-'

to_source=(
  ~/.zsh/aliasrc
  ~/.zsh/functions.sh
  ~/.zsh/simple.zsh-theme
  ~/.id
)

for i in ${to_source[@]}; {
  [[ -e $i ]] && source "$i"
}

# man and pager stuff
export LESS="-r --mouse --wheel-lines=2"
export LESS_TERMCAP_mb=$(tput bold; tput setaf 41)
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 231; tput setab 241)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 9)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export EDITOR=nvim
export MANROFFOPT="-c"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# theme env
export QT_QPA_PLATFORMTHEME=qt5ct
export XCURSOR_THEME=Adwaita
export XCURSOR_SIZE=24

# firefox
export LIBVA_DRIVER_NAME=radeonsi

# java apps
export _JAVA_AWT_WM_NONREPARENTING=1

# terminal
export TERM=xterm-256color

# syntax highlight
hi=/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
if [[ -f $hi ]]; then
  source $hi

  # zle stuff
  export ZSH_HIGHLIGHT_STYLES[arg0]="none"
  export ZSH_HIGHLIGHT_STYLES[path]="fg=cyan,bold"
  export ZSH_HIGHLIGHT_STYLES[comment]="fg=blue,bold"
  export ZSH_HIGHLIGHT_STYLES[redirection]="fg=yellow,bold"
  export ZSH_HIGHLIGHT_STYLES[autodirectory]="fg=blue,bold"
  export ZSH_HIGHLIGHT_STYLES[reserved-word]="fg=yellow,bold"
fi

# auto startx on TTY1
if [[ $(tty) = /dev/tty1 && "$(whoami)" != root ]]; then
  if true; then
    export MOZ_ENABLE_WAYLAND=1
    export XDG_CURRENT_DESKTOP=sway
    export ELECTRON_OZONE_PLATFORM_HINT=wayland

    exec sway
  else
    export MOZ_X11_EGL=1
    export MOZ_USE_XINPUT2=1

    exec startx
  fi
fi

# vim: set ft=zsh ts=2 sts=2 sw=2 et :
