#!/usr/bin/env bash
# deps: brightnessctl ddccontrol notifysend

set -euo pipefail

info() {
  cat << EOF
Usage: ${0##*/} [-i | -d N] [-l | -m | -k | -b] [-h] [-n]
-i, --inc N      increase of N (an integer that can be followed by a % sign)
-d, --dec N      decrease of N (an integer that can be followed by a % sign)
-l, --laptop     operate on laptop backlight
-m, --monitor    operate on monitor backlight
-k, --keyboard   operate on keyboard backlight
-b, --blue       operate on monitor blue light
-h, --help       show help
-n, --notify     send a notification
EOF
}

MESS=brightness
NOTIFY=

while [[ $# != 0 ]]; do
  case "$1" in
    -l | --laptop)
      DEV=laptop
    ;;

    -m | --monitor)
      DEV=monitor
    ;;

    -k | --keyboard)
      DEV=keyboard
    ;;

    -b | --blue)
      MESS="blue light" DEV=monitor ADDRESS=0x1a
    ;;

    -i | --inc)
      shift
      BCTL_VAL="+${1/%/}%" DDC_VAL="+${1/%/}"
    ;;

    -d | --dec)
      shift
      BCTL_VAL="${1/%/}%-" DDC_VAL="-${1/%/}"
    ;;

    -h | --help)
      info
      exit 0
    ;;

    -n | --notify)
      NOTIFY=1
    ;;

    *)
      info >&2
      exit 255
    ;;
  esac

  shift
done

: "${BCTL_VAL:=1%+}" "${DDC_VAL:=+1}" "${DEV:=laptop}" "${ADDRESS:=0x10}"

case "$DEV" in
  laptop)
    RET=$(brightnessctl s "$BCTL_VAL" | awk 'NR==3 {gsub("[()%]",""); print $4}')
  ;;

  keyboard)
    RET=$(brightnessctl -d smc::kbd_backlight s "$BCTL_VAL" | awk 'NR==3 {gsub("[()%]",""); print $4}')
  ;;

  monitor)
    readonly dev_file=/tmp/ddcc_i2c

    # Probing the device
    if [[ ! -f $dev_file ]]; then
      path=$(ddccontrol -p 2>/dev/null | awk -F: '/at bus dev:/ {gsub("[.]",""); print $2}')
      echo "dev:$path" > $dev_file
    fi
    IFS= read -r DEVICE < $dev_file

    # Sanity check
    case "$DEVICE" in
      dev:/dev/i2c-*)
        ;;
      *)
        DEVICE=-p
        rm -f $dev_file
        ;;
    esac

    RET=$(ddccontrol "$DEVICE" -r "$ADDRESS" -W "$DDC_VAL" 2>/dev/null | awk -F'/' 'END {print $2}')

    # Error check
    case "$RET" in
      ''|*[!0-9]*)
        rm -f $dev_file
        killall -9 ddccontrol &>/dev/null
        exit 255
        ;;
    esac
  ;;
esac

echo "$RET"

[[ -n $NOTIFY ]] && \
  notify-send "${DEV}" "${MESS} at ${RET}%" \
    -h string:x-canonical-private-synchronous:anything \
    -a notif \
    -i display-brightness \
    -h int:value:"$RET"

# vim: set ts=2 sts=2 sw=2 et :
